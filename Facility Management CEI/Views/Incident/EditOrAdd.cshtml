@model API.Models.Incident

@{
    ViewData["Title"] = ViewBag.PageName;
    Layout = "~/Views/_Shared/_Layout.cshtml";
    var UserId = ViewBag.UserId;
    //var SensorWarningList =(List<API.Models.SensorWarning>) ViewBag.SensorWarning;//an unboxing must be made 
    //var model = Model;
    var MyWarning = ViewBag.SensorWarning;
    var DummySpace = ViewBag.SpaceDummy;
    
}
<head>
    @await Html.PartialAsync("~/Views/Viewer/ViewerScriptsPartial.cshtml")
    <style>
        .form-control:disabled {
            opacity: 0.7;
        }
    </style>
       
</head>


<h1> <english>@ViewBag.PageName</english><arabic class="d-none">الحادثة</arabic></h1> @*need to be translated*@ 
<hr/>
<div class="position-relative">
    <div class="shadow-lg py-3 mb-5 bg-white rounded row my-auto" style="position: absolute;
                                            height: 650px;
                                            left: 8px;
                                            z-index:6;" id="ToggleLeftSliderContainer">
        <div class="font-weight-bold mb-2 col-sm-1 my-auto" style="max-width: 1px"><div class="vertical-text"><english>Details</english><arabic class="d-none">المعلومات</arabic></div></div>
        <div id="ToggleLeftSlider" class="col-auto my-auto">
            
            <english>
                <form asp-action="EditOrAdd">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                @if (@ViewBag.IsEdit)
                {
                    <input type="hidden" asp-for="Id" />
                }
                <div class="form-group">
                    <!--this form inputs will be bind at the back end using the posy method 
                       asp-for="Description": this will be mapped to the bind attribute string values that the Description 
                       values writtin in the UI will be binded at the ack end using this mapping 

                    -->
                    <label class="control-label">Description</label>
                    <input asp-for="Description" class="form-control" />
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
                @if (@ViewBag.IsEdit)
                {
                <div class="form-group">
                <label class="control-label">Status</label><!-- creating our drop down list for statuts enum-->
                @Html.DropDownList("Status", new List<SelectListItem> {
                    new SelectListItem { Text="Choose Status", Disabled = true },
                    new SelectListItem { Text="Open",Value="0"},
                    new SelectListItem { Text="Completed",Value="1"} ,
                    }, new { @class = "form-control" })<!--the default value for our drop panel-->
                    <span asp-validation-for="Status" class="text-danger"></span> <!-- data vaidation for the inserted value-->
                </div>
                }
                else
                {
                <div class="form-group">

                <input asp-for="Status" class="form-control-plaintext shadow-none" value="Open" hidden />

                <span asp-validation-for="Status" class="text-danger"></span> <!-- data vaidation for the inserted value-->
                </div>
                }
                <div class="form-group">
                <label class="control-label">Priority</label><!-- creating our drop down list for statuts enum-->
                @Html.DropDownList("Priorty", new List<SelectListItem> {
                    new SelectListItem { Text="Choose Priority", Disabled = true },
                    new SelectListItem { Text="Severe",Value="0"},
                    new SelectListItem { Text="High",Value="1"},
                    new SelectListItem { Text="Medium",Value="2"},
                    new SelectListItem { Text="Low",Value="3"},
                    }, new { @class = "form-control" })<!--the default value for our drop panel-->
                    <span asp-validation-for="Priority" class="text-danger"></span> <!-- data vaidation for the inserted value-->
                </div>
                <div class="form-group">
                 <input asp-for="SensorWarningId" class="form-control-plaintext shadow-none" value="@MyWarning" hidden />
                 <span asp-validation-for="SensorWarningId" class="text-danger"></span>
                </div>
                <div id="IdSpaceEn" class="form-group">
                    <label class="control-label">Space ID</label>
                    <select asp-for="SpaceId" class ="form-control" asp-items="ViewBag.SpaceId">
                    <option selected="selected" class="form-control" value="@DummySpace" hidden></option>
                    </select>
                    <span asp-validation-for="SpaceId" class="text-danger"></span>
                </div>
                <div class="form-group">

                    @*<label class="control-label">User ID</label>*@
                    <input asp-for="AppUserId" class="form-control-plaintext shadow-none" value="@UserId" hidden />
                    <span asp-validation-for="AppUserId" class="text-danger"></span>
                </div>
                <div id="AssetId_en" class="form-group">
                    <label  class="control-label">Asset ID</label>
                  <input asp-for="AssetId" id="AssetIdEn" class="form-control-plaintext shadow-none" value="ViewBag.AssetId" readonly/>     
                  @* <input asp-for="AssetId" id="AssetIdEn"  /> *@
                   <span asp-validation-for="AssetId" class="text-danger"></span>
                </div>
                @if (@ViewBag.IsEdit)
                {
                 <div class="form-group">
                    <label class="control-label">Comment</label>
                    <input asp-for="Comment" class="form-control"/>
                    <span asp-validation-for="Comment" class="text-danger"></span>
                </div>
                }

                <div class="form-group">
                    <input class="btn btn-primary waves-effect" type="submit" value="Save" />
                    <a class="btn btn-success waves-effect" asp-action="Index">Back</a>
                </div>
            </form>
            </english>
            <arabic class="d-none">
                <form asp-action="EditOrAdd">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                @if (@ViewBag.IsEdit)
                {
                    <input type="hidden" asp-for="Id" />

                }
                <div class="form-group">
                    <!--this form inputs will be bind at the back end using the posy method 
                       asp-for="Description": this will be mapped to the bind attribute string values that the Description 
                       values writtin in the UI will be binded at the ack end using this mapping 

                    -->
                    <label  class="control-label">التوصيف</label>
                    <input asp-for="Description" class="form-control" />
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
                @if (@ViewBag.IsEdit)
                {
                <div class="form-group">
                <label class="control-label">الحالة</label><!-- creating our drop down list for statuts enum-->
                @Html.DropDownList("Status", new List<SelectListItem> {
                    new SelectListItem { Text="Choose Status", Disabled = true },
                    new SelectListItem { Text="Open",Value="0"},
                    new SelectListItem { Text="Completed",Value="1"} ,
                    }, new { @class = "form-control" })<!--the default value for our drop panel-->
                    <span asp-validation-for="Status" class="text-danger"></span> <!-- data vaidation for the inserted value-->
                </div>
                }
                else
                {
                <div class="form-group">
                <label class="control-label">الحالة</label><!-- creating our drop down list for statuts enum-->
                <input asp-for="Status"  class="form-control-plaintext shadow-none" value="Open" readonly/>
                <span asp-validation-for="Status" class="text-danger"></span> <!-- data vaidation for the inserted value-->
                </div>
                }
                <div class="form-group">
                <label class="control-label">الأهمية</label><!-- creating our drop down list for statuts enum-->
                @Html.DropDownList("Priorty", new List<SelectListItem> {
                    new SelectListItem { Text="Choose Priority", Disabled = true },
                    new SelectListItem { Text="Severe",Value="0"},
                    new SelectListItem { Text="High",Value="1"},
                    new SelectListItem { Text="Medium",Value="2"},
                    new SelectListItem { Text="Low",Value="3"},
                    }, new { @class = "form-control" })<!--the default value for our drop panel-->
                    <span asp-validation-for="Priority" class="text-danger"></span> <!-- data vaidation for the inserted value-->
                </div>

                <div class="form-group">
                     <input asp-for="SensorWarningId" class="form-control-plaintext shadow-none" value="@MyWarning" hidden />
                     <span asp-validation-for="SensorWarningId" class="text-danger"></span>
                </div>

                <div id="IdSpaceAr" class="form-group">
                    <label class="control-label">كود الفراغ</label>
                    <select asp-for="SpaceId" class="form-control" asp-items="ViewBag.SpaceId">
                    <option selected="selected" class="form-control" value="@DummySpace" hidden></option>
                    </select>
                    <span asp-validation-for="SpaceId" class="text-danger"></span>
                </div>
                <div class="form-group">
@*                    <label class="control-label">كود المستخدم</label>
*@                    <input asp-for="AppUserId" class="form-control-plaintext shadow-none" value="@UserId" hidden/>
                    <span asp-validation-for="AppUserId" class="text-danger"></span>
                </div>
                <div id="AssetId_ar" class="form-group">
                    <label  class="control-label">كود الأصل</label>
                    <input asp-for="AssetId" id="AssetIdAr" class="form-control-plaintext shadow-none" value="ViewBag.AssetId" readonly/>     
                    <span asp-validation-for="AssetId" class="text-danger"></span>
                </div>
                @if (@ViewBag.IsEdit)
                {
                 <div class="form-group">
                    <label class="control-label">ملاحظات</label>
                    <input asp-for="Comment" class="form-control"/>
                    <span asp-validation-for="Comment" class="text-danger"></span>
                </div>
                }

                <div class="form-group">
                    <input class="btn btn-primary waves-effect" type="submit" value="حفظ"/>
                    <a class="btn btn-success waves-effect" asp-action="Index">الرجوع إلى القائمة</a>
                </div>
            </form>
            </arabic>
            
        </div>
        <div class="col-sm-1 SliderDiv" id="ToggleLeftSliderDivArrow" style="max-width: 1px">
            <i class="fas fa-angle-double-down vertical-text h-100 d-flex justify-content-center align-items-center" id="ToggleLeftSliderArrow"></i>
        </div>
    </div>

        <canvas id="viewer" height="650" style="width: 100%;
                                object-fit: contain;"></canvas>
            @*<div class="custom-control custom-switch mb-1">
                <input type="checkbox" class="custom-control-input custom-control-input-light" id="Switch2" onchange="ToggleHighLightSevere()" checked>
                <label class="custom-control-label custom-control-label-light" for="Switch2">Severe</label>
            </div>
            <div class="custom-control custom-switch mb-1">
                <input type="checkbox" class="custom-control-input custom-control-input-light" id="Switch3" onchange="ToggleHighLightHigh()" checked>
                <label class="custom-control-label custom-control-label-light" for="Switch3">High</label>
            </div>
            <div class="custom-control custom-switch mb-1">
                <input type="checkbox" class="custom-control-input custom-control-input-light" id="Switch4" onchange="ToggleHighLightMedium()" checked>
                <label class="custom-control-label custom-control-label-light" for="Switch4">Medium</label>
            </div>
            <div class="custom-control custom-switch mb-1">
                <input type="checkbox" class="custom-control-input custom-control-input-light" id="Switch5" onchange="ToggleHighLightLow()" checked>
                <label class="custom-control-label custom-control-label-light" for="Switch5">Low</label>
            </div>*@

        @await Html.PartialAsync("~/Views/Viewer/ViewerToggleFloorsPartial.cshtml")

        <div style="position: absolute;
                    top: 8px;
                    right: 16px;
                    z-index:5" id="overlayDiv"></div>
        <script type="text/javascript">
            var viewer = new xViewer('viewer');
            //viewer.load('/data/SampleHouse.wexbim');
            //viewer.load('@System.Configuration.ConfigurationManager.AppSettings["wexBIMFullPath"]');
            var navCube = new xNavigationCube();
            navCube.ratio = .1;
            viewer.addPlugin(navCube);
            viewer.start();
            viewer.defineStyle(0, [255,0,0,255])
            viewer.defineStyle(1, [255,160,16,255])
            viewer.defineStyle(2, [255,224,32,255])
            viewer.defineStyle(3, [0,255,0,255])
        </script>

        <script>
                viewer.on('fps', function (fps) {
                    var overlayDiv = document.getElementById('overlayDiv');
                    if (overlayDiv) {
                        overlayDiv.innerHTML = "FPS: " + fps;
                    }
                });
        </script>

        <div>
            <div class="text-center font-weight-bold m-2" id="productId"></div>
        </div>

        <div class="text-center">
@*            <select id="cmbHide">
                <option value="noAction">No action</option>
                <option value="hideProduct">Hide product</option>
                <option value="hideType">Hide type</option>
                <option value="highlight">Highlight</option>
            </select>*@
            <button class="btn btn-primary waves-effect waves-light" onclick="HideProduct()">Hide Product</button>
            <button class="btn btn-primary waves-effect waves-light" onclick="HideType()">Hide Type</button>
            <button class="btn btn-primary waves-effect waves-light" onclick="Highlight()">Select Product</button>
            <button class="btn btn-primary waves-effect waves-light" onclick="ResetAll()">Reset all</button>
            <script type="text/javascript">

                var timer = 0;
                var highlightedId;
                var option;
                
                function HideProduct() {
                    option = "hideProduct";
                }
                
                function HideType() {
                    option = "hideType";
                }

                function Highlight() {
                    option = "highlight";
                }

                function ResetAll() {
                    if (viewer) {
                        viewer.resetStates();
                    }
                    var div = document.getElementById('productId');
                    if (div) {
                        div.innerHTML = "";
                    }
                }
                
                viewer.on('pick', function (args) {
                    var id = args.id;
                    viewer.setCameraTarget(id);
                    pickedId = id;
                    document.getElementById('hiddenId').value = id;

                    //var cmb = document.getElementById('cmbHide');
                    //var option = cmb.value;
                    switch (option) {
                        case 'hideProduct':
                            viewer.setState(xState.HIDDEN, [args.id]);
                            if (args.id == highlightedId)
                            {
                                highlightedId = null;
                            }
                            break;
                        case 'hideType':
                            var type = viewer.getProductType(args.id);
                            viewer.setState(xState.HIDDEN, type);
                            if (type == viewer.getProductType(highlightedId))
                            {
                                highlightedId = null;
                            }
                            break;
                        case 'highlight':
                            //viewer.ResetAll();
                            viewer.setState(xState.UNDEFINED, [highlightedId]);
                            viewer.setState(xState.HIGHLIGHTED, [args.id]);
                            var div = document.getElementById('productId');
                            if (div) {
                                div.innerHTML = "Selected Asset Id = " + id;
                            }
                            $('#AssetIdEn').val(id);
                            $('#AssetIdAr').val(id);
                            highlightedId = id;
                            break;
                        default:
                            break;
                    }

                    var time = (new Date()).getTime();
                    if (time - timer < 200)
                        viewer.zoomTo(id);
                    timer = time;

                });
            </script>
            <input name="hiddenId" type="hidden" id="hiddenId" />
        </div>
    </div>
     <script>
         document.getElementById('IdSpaceEn').addEventListener('change',
         function changeStyle()
        {
             var AssetIdEn = document.getElementById('AssetId_en');
             AssetIdEn.style.display = "none";
        }
        );

        document.getElementById('IdSpaceAr').addEventListener('change',
         function changeStyle()
        {
             var AssetIdAr = document.getElementById('AssetId_ar');
             AssetIdAr.style.display = "none";
        }
        );

         var x=document.getElementById('AssetIdEn').addEventListener('input',
        function changeStyle()
        {
            var SpaceIdEn = document.getElementById('IdSpaceEn');
            SpaceIdEn.style.display = "none";
        }
        );
        document.getElementById('AssetIdAr').addEventListener('input',
        function changeStyle()
        {
            var SpaceIdAr = document.getElementById('IdSpaceAr');
            SpaceIdAr.style.display = "none";
        }
        );
    </script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
@* <span asp-validation-for="Comment" class="text-danger"></span>*@
                

@*
 <form asp-controller="Account" asp-action="Login" method="post">
 <div asp-validation-summary="ModelOnly" class="text-danger"></div>*@ @*we add this line after the form tag*@ 

@* <span asp-validation-for="Comment" class="text-danger"></span>*@ @*we add this line after the input tag*@ 
@*<english>Welcome Back !</english><arabic class="d-none">مرحبا !</arabic>*@
@*<english></english><arabic class="d-none"></arabic>*@