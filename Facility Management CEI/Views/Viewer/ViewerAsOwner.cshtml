
@{
    ViewBag.Title = "Building Viewer";
    Layout = "~/Views/_Shared/_Layout.cshtml";
}

@using System.Configuration
@using API.Models
@model Dictionary<int, Facility_Management_CEI.Controllers.ViewerParameter>

<h2 class="text-center text-uppercase font-weight-bold mb-5">
    <english>Work Order Viewer Dashboard</english>
    <arabic class="d-none">لوحة متابعة المهام</arabic>
</h2>

<head>
    <title>
        <english>Building Viewer as Owner</english>
        <arabic class="d-none">عرض المبنى كمالك</arabic>
    </title>

@await Html.PartialAsync("~/Views/Viewer/ViewerScriptsPartial.cshtml")

</head>
<body>
    @if(ViewContext.HttpContext.User.IsInRole("AccountManager"))
    {
        <label for="UserId"><english>Please Select in a User: </english><arabic class="d-none">الرجاء ادخال كود المستخدم: </arabic></label>
        <div class="input-group mb-3">
            @Html.DropDownList("Id", new SelectList(ViewBag.Ids, "Id", "FullText"), new {@id="UserId", @class="form-control"})
            @*<select class="form-control" asp-items="ViewBag.OwnerIds"></select>*@
            @*<input class="form-control w-50" type="number" id="UserId">*@
            <div class="input-group-append">
                <button onclick="location.href='/Viewer/ViewerAsOwner/'+document.getElementById('UserId').value" class="btn btn-success waves-effect waves-light"><english>Go to User View</english><arabic class="d-none">انتقل إلى عرض المستخدم</arabic></button>
            </div>
        </div>
    }
    <div class="position-relative">
        <canvas id="viewer" height="700" style="width: 100%;
                                    object-fit: contain;"></canvas>
        
        <div class="shadow-lg py-3 mb-5 bg-light rounded row" style="position: absolute;
                                            height: 700px;
                                            top: 0px;
                                            left: 8px;
                                            z-index:6;" id="ToggleLeftSliderContainer">
            <div class="font-weight-bold mb-2 col-sm-1 my-auto" style="max-width: 1px"><div class="vertical-text"><english>Tables</english><arabic class="d-none">الجداول</arabic></div></div>
            <div id="ToggleLeftSlider" class="col-auto overflow-auto" style="height: 650px">
                <h3 class="text-center font-weight-bold">
                    <english>Subordinates</english>
                    <arabic class="d-none">الموظفون تحت الإشراف</arabic>
                </h3>
                <ul class="nav nav-tabs" role="tablist">
                    <li class="nav-item">
                        <a class="nav-link active" href="#ManagersDiv" data-toggle="tab">
                            <english>Managers</english>
                            <arabic class="d-none">المديرين</arabic>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#SupervisorsDiv" data-toggle="tab">
                            <english>Supervisors</english>
                            <arabic class="d-none">المشرفون</arabic>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#InspectorsDiv" data-toggle="tab">
                            <english>Inspectors</english>
                            <arabic class="d-none">المفتشون</arabic>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#AgentsDiv" data-toggle="tab">
                            <english>Agents</english>
                            <arabic class="d-none">العمال</arabic>
                        </a>
                    </li>
                </ul>
                <div class="tab-content">
                    <div class="shadow-sm p-3 mb-4 bg-white rounded tab-pane active" id="ManagersDiv">
                        <table id="ManagersTable" class="w-100 table table-striped table-hover mb-3">
                            <thead>
                                <tr>
                                    <th>
                                        <english>User ID</english>
                                        <arabic class="d-none">كود المستخدم</arabic>
                                    </th>
                                    <th>
                                        <english>Name</english>
                                        <arabic class="d-none">الاسم</arabic>
                                    </th>
                                    <th>
                                        <english>User Details</english>
                                        <arabic class="d-none">تفاصيل المستخدم</arabic>
                                    </th>
                                    <th>
                                        <english>Load Work Orders</english>
                                        <arabic class="d-none">تحميل المهام</arabic>
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var Manager in ViewBag.Managers)
                                {
                                    <tr>
                                        <th>@Manager.Id</th>
                                        <td>@Manager.FirstName @Manager.LastName</td>
                                        <td><button class="btn btn-info waves-effect waves-light" onclick="location.href='/AppUsers/Details/'+@Manager.Id">               
                                            <english>User Details</english>
                                            <arabic class="d-none">تفاصيل المستخدم</arabic>
                                        </button>
                                        </td>
                                        <td><button class="btn btn-success waves-effect waves-light" onclick="ChangeDataManager(@Manager.Id)">          
                                            <english>Show Work Orders</english>
                                            <arabic class="d-none">إظهار المهام</arabic>
                                        </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <div class="shadow-sm p-3 mb-4 bg-white rounded tab-pane" id="SupervisorsDiv">
                        <table id="SupervisorsTable" class="w-100 table table-striped table-hover mb-3">
                            <thead>
                                <tr>
                                    <th>
                                        <english>User ID</english>
                                        <arabic class="d-none">كود المستخدم</arabic>
                                    </th>
                                    <th>
                                        <english>Name</english>
                                        <arabic class="d-none">الاسم</arabic>
                                    </th>
                                    <th>
                                        <english>User Details</english>
                                        <arabic class="d-none">تفاصيل المستخدم</arabic>
                                    </th>
                                    <th>
                                        <english>Load Work Orders</english>
                                        <arabic class="d-none">تحميل المهام</arabic>
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var Supervisor in ViewBag.Supervisors)
                                {
                                    <tr>
                                        <th>@Supervisor.Id</th>
                                        <td>@Supervisor.FirstName @Supervisor.LastName</td>
                                        <td><button class="btn btn-info waves-effect waves-light" onclick="location.href='/AppUsers/Details/'+@Supervisor.Id"> 
                                            <english> User Details</english>
                                            <arabic class="d-none">تفاصيل المستخدم</arabic>
                                        </button></td>
                                        <td><button class="btn btn-success waves-effect waves-light" onclick="ChangeDataSupervisor(@Supervisor.Id)"> 
                                            <english>Show Work Orders</english>
                                            <arabic class="d-none">إظهار المهام</arabic>
                                        </button></td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <div class="shadow-sm p-3 mb-4 bg-white rounded tab-pane" id="InspectorsDiv">
                        <table id="InspectorsTable" class="w-100 table table-striped table-hover mb-3">
                            <thead>
                                <tr>
                                    <th>
                                        <english>User ID</english>
                                        <arabic class="d-none">كود المستخدم</arabic>
                                    </th>
                                    <th>
                                        <english>Name</english>
                                        <arabic class="d-none">الاسم</arabic>
                                    </th>
                                    <th>
                                        <english>User Details</english>
                                        <arabic class="d-none">تفاصيل المستخدم</arabic>
                                    </th>
                                    <th>
                                        <english>Load Work Orders</english>
                                        <arabic class="d-none">تحميل المهام</arabic>
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var Inspector in ViewBag.Inspectors)
                                {
                                    <tr>
                                        <th>@Inspector.Id</th>
                                        <td>@Inspector.FirstName @Inspector.LastName</td>
                                        <td><button class="btn btn-info waves-effect waves-light" onclick="location.href='/AppUsers/Details/'+@Inspector.Id"> 
                                                <english>User Details</english>
                                                <arabic class="d-none">تفاصيل المستخدم</arabic>
                                        </button></td>
                                        <td><button class="btn btn-success waves-effect waves-light" onclick="ChangeDataInspector(@Inspector.Id)"> 
                                            <english>Show Work Orders</english>
                                            <arabic class="d-none">إظهار المهام</arabic>
                                        </button></td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <div class="shadow-sm p-3 mb-4 bg-white rounded tab-pane" id="AgentsDiv">
                        <table id="AgentsTable" class="w-100 table table-striped table-hover mb-3">
                            <thead>
                                <tr>
                                    <th>
                                        <english>User ID</english>
                                        <arabic class="d-none">كود المستخدم</arabic>
                                    </th>
                                    <th>
                                        <english>Name</english>
                                        <arabic class="d-none">الاسم</arabic>
                                    </th>
                                    <th>
                                        <english>User Details</english>
                                        <arabic class="d-none">تفاصيل المستخدم</arabic>
                                    </th>
                                    <th>
                                        <english>Load Work Orders</english>
                                        <arabic class="d-none">تحميل المهام</arabic>
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var Agent in ViewBag.Agents)
                                {
                                    <tr>
                                        <th>@Agent.Id</th>
                                        <td>@Agent.FirstName @Agent.LastName</td>
                                        <td><button class="btn btn-info waves-effect waves-light" onclick="location.href='/AppUsers/Details/'+@Agent.Id"> 
                                                <english> User Details</english>
                                                <arabic class="d-none">تفاصيل المستخدم</arabic>
                                        </button></td>
                                        <td><button class="btn btn-success waves-effect waves-light" onclick="ChangeData(@Agent.Id)"> 
                                            <english>Show Work Orders</english>
                                            <arabic class="d-none">إظهار المهام</arabic>
                                        </button></td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <h3 class="text-center font-weight-bold" id="BottomTableHeading"> 
                    <english>All Work Orders</english>
                    <arabic class="d-none">كل المهام</arabic>
                </h3>
                <div class="shadow-sm p-3 mb-4 bg-white rounded tab-pane" id="tab-table2">
                    <table id="ItemsTable" class="w-100 table table-striped table-hover">
                        <thead>
                            <tr>
                                <th>
                                    <english>Agent ID</english>
                                    <arabic class="d-none">كود العامل</arabic>
                                </th>
                                <th>
                                    <english>Work Order ID</english>
                                    <arabic class="d-none">كود المهمة</arabic>
                                </th>
                                <th>
                                        <english>Agent Name</english>
                                    <arabic class="d-none">اسم العامل</arabic>
                                </th>
                                <th>
                                    <english> Asset Name</english>
                                    <arabic class="d-none">اسم العنصر</arabic>
                                </th>
                                <th>
                                    <english>Zoom To</english>
                                    <arabic class="d-none">تكبير/تصغير</arabic>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var task in ViewBag.Tasks)
                            {
                                <tr>
                                    <th>@task.AssignedToId</th>
                                    <th>@task.Id</th>
                                    <th>@(((List<AppUser>)ViewBag.Agents).Where(x => x.Id == task.AssignedToId).Select(a => a.FirstName + " " + a.LastName).FirstOrDefault())</th>
                                    <td>
                                        @if(task.Incident.Asset != null)
                                        {
                                            @task.Incident.Asset.Name;
                                        }
                                        else
                                        {
                                            @task.Incident.Space.Name;
                                        }
                                    </td>
                                    @*<td><button class="btn btn-info waves-effect waves-light">Details</button></td>*@
                                    @*<td><a scope="col" asp-controller="TaskPages" asp-action="Details" asp-route-id="@task.Id" class="btn btn-info waves-effect waves-light" >Details</a></td>*@
                                    <td><button class="btn btn-success waves-effect waves-light" onclick="viewer.zoomTo(@if(task.Incident.Asset == null){@task.Incident.SpaceId} else {@task.Incident.AssetId})">Zoom To</button></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="col-sm-1 SliderDiv" id="ToggleLeftSliderDivArrow" style="max-width: 1px">
                <i class="fas fa-angle-double-down vertical-text h-100 d-flex justify-content-center align-items-center" id="ToggleLeftSliderArrow"></i>
            </div>
        </div>

        <div class="shadow-lg p-3 mb-5 bg-white rounded" style="width: 270px; position: absolute;
                                                                top: 300px;
                                                                right: 8px;
                                                                z-index:5">
            <div class="font-weight-bold mb-2 text-center">
                <english>Toggle Highlights</english>
                <arabic class="d-none">الإضاءات</arabic>
            </div>
            @*<button class="btn btn-primary" onclick="ToggleHighLightItems()">Toggle Highlight Items</button>
            <button class="btn btn-primary" onclick="ToggleHighLightSevere()">Toggle Highlight Severe</button>
            <button class="btn btn-primary" onclick="ToggleHighLightHigh()">Toggle Highlight High</button>
            <button class="btn btn-primary" onclick="ToggleHighLightMedium()">Toggle Highlight Medium</button>
            <button class="btn btn-primary" onclick="ToggleHighLightLow()">Toggle Highlight Low</button>*@
            <div id="ToggleHighlightDiv">
                <div class="custom-control custom-switch mb-1">
                    <input type="checkbox" class="custom-control-input" id="Switch1" onchange="ToggleHighLightItems()" autocomplete="off">
                    <label class="custom-control-label" for="Switch1">
                        <english>Items</english>
                        <arabic class="d-none">العناصر</arabic>
                        </label>
                </div>
                <div class="custom-control custom-switch mb-1">
                    <input type="checkbox" class="custom-control-input custom-control-input-light" id="Switch2" onchange="ToggleHighLightSevere()" checked autocomplete="off">
                    <label class="custom-control-label custom-control-label-light" for="Switch2">
                        <english>Severe</english>
                        <arabic class="d-none">شديدة</arabic>
                        </label>
                </div>
                <div class="custom-control custom-switch mb-1">
                    <input type="checkbox" class="custom-control-input custom-control-input-light" id="Switch3" onchange="ToggleHighLightHigh()" checked autocomplete="off">
                    <label class="custom-control-label custom-control-label-light" for="Switch3">
                        <english>High</english>
                        <arabic class="d-none">عالي</arabic>
                        </label>
                </div>
                <div class="custom-control custom-switch mb-1">
                    <input type="checkbox" class="custom-control-input custom-control-input-light" id="Switch4" onchange="ToggleHighLightMedium()" checked autocomplete="off">
                    <label class="custom-control-label custom-control-label-light" for="Switch4">
                        <english>Medium</english>
                        <arabic class="d-none">متوسط</arabic>
                    </label>
                </div>
                <div class="custom-control custom-switch mb-1">
                    <input type="checkbox" class="custom-control-input custom-control-input-light" id="Switch5" onchange="ToggleHighLightLow()" checked autocomplete="off">
                    <label class="custom-control-label custom-control-label-light" for="Switch5">
                        <english>Low</english>
                        <arabic class="d-none">قليل</arabic>
                    </label>
                </div>
            </div>
            <div class="text-center SliderDiv" id="ToggleHighlightArrowDiv">
                <i class="fas fa-angle-double-up" id="ToggleHighlightDivArrow"></i>
            </div>

        </div>

        @await Html.PartialAsync("~/Views/Viewer/ViewerToggleFloorsPartial.cshtml")

        <div style="position: absolute;
                    top: 8px;
                    right: 50%;
                    z-index:5" id="fpsDiv"></div>
        <script type="text/javascript">
            var viewer = new xViewer('viewer');
            //viewer.load('../data/SampleHouse.wexbim');
            //viewer.load('@System.Configuration.ConfigurationManager.AppSettings["wexBIMFullPath"]');
            var navCube = new xNavigationCube();
            navCube.ratio = .1;
            viewer.addPlugin(navCube);
            viewer.start();
            viewer.defineStyle(0, [255,0,0,255])
            viewer.defineStyle(1, [255,160,16,255])
            viewer.defineStyle(2, [255,224,32,255])
            viewer.defineStyle(3, [0,255,0,255])
        </script>
                
        @*<script> 
                viewer.on('pick', function (args) {
                    var id = args.id;
                    viewer.setCameraTarget(id);
                    pickedId = id;
                });
        </script>*@
        
        <script>
                viewer.on('fps', function (fps) {
                    var fpsDiv = document.getElementById('fpsDiv');
                    if (fpsDiv) {
                        fpsDiv.innerHTML = "FPS: " + fps;
                    }
                });
        </script>

        <div>
            <div class="text-center font-weight-bold m-2" id="productId"></div>
        </div>

@*        <script>
            // Arrays to hold the item id's depending on their priority
            var listOfSevere = [];
            var listOfHigh = [];
            var listOfMedium = [];
            var listOfLow = [];
            @foreach (var i in Model.Severe)
            {
                @:listOfSevere.push(@i);
            }
            @foreach (var i in Model.High)
            {
                @:listOfHigh.push(@i);
            }
            @foreach (var i in Model.Medium)
            {
                @:listOfMedium.push(@i);
            }
            @foreach (var i in Model.Low)
            {
                @:listOfLow.push(@i);
            }

            
            var animateBool = true;
            setInterval(animateObjects, 1000);
            function animateObjects() {
                if (animateBool) {
                    viewer.setStyle(0, listOfSevere);
                    viewer.setStyle(1, listOfHigh);
                    viewer.setStyle(2, listOfMedium);
                    viewer.setStyle(3, listOfLow);
                    animateBool = false;
                }
                else {
                    viewer.resetStyles()
                    animateBool = true;
                }
            }
        </script>*@

@*        <div>
            <button onclick="CreateCanvas()">Clear</button>
            <button onclick="if (viewer) viewer.load('../data/SampleHouse.wexbim');">File 1</button>
            <button onclick="if (viewer) viewer.load('../data/Ahmed Fikry Arch.wexBIM');">File 2</button>
            <button onclick="if (viewer) viewer.load('../data/Mohammed Jamal Mahmoud Project arc 1.wexBIM');">File 3</button>
            <button onclick="if (viewer) viewer.load('../data/ITI-ITISV-B01-A.wexBIM');">File 4</button>
        </div>*@

        <div class="text-center">
@*            <select id="cmbHide">
                <option value="noAction">No action</option>
                <option value="hideProduct">Hide product</option>
                <option value="hideType">Hide type</option>
                <option value="highlight">Highlight</option>
            </select>*@
            <button class="btn btn-primary waves-effect waves-light" onclick="HideProduct()">
                <english>Hide Product</english>
                <arabic class="d-none">إخفاء عنصر</arabic>
            </button>
            <button class="btn btn-primary waves-effect waves-light" onclick="HideType()">
                <english>Hide Type</english>
                <arabic class="d-none">إخفاء الحالة</arabic>
            </button>
            <button class="btn btn-primary waves-effect waves-light" onclick="Highlight()">
                <english>Select Product</english>
                <arabic class="d-none">اختر  عنصر</arabic>
            </button>
            <button class="btn btn-primary waves-effect waves-light" onclick="viewer.zoomTo()">
                <english>Reset Zoom</english>
                <arabic class="d-none">ارجاع التكبير</arabic>
            </button>
            <button class="btn btn-primary waves-effect waves-light" onclick="ResetAll()">
                <english>Reset all</english>
                <arabic class="d-none">ارجاع الكل</arabic>
            </button>
            <script type="text/javascript">

                var timer = 0;
                var highlightedId;
                var option;
                
                function HideProduct() {
                    option = "hideProduct";
                }
                
                function HideType() {
                    option = "hideType";
                }

                function Highlight() {
                    option = "highlight";
                }

                function ResetAll() {
                    if (viewer) {
                        viewer.resetStates();
                        document.getElementById('Switch6').checked = true;
                        document.getElementById('Switch7').checked = true;
                        document.getElementById('Switch8').checked = true;
                        document.getElementById('Switch9').checked = true;
                        document.getElementById('Switch10').checked = true;
                        document.getElementById('Switch11').checked = true;
                        document.getElementById('Switch12').checked = true;
                        ShowingFloors = new Array(FloorNames.length).fill(true);
                    }
                    var div = document.getElementById('productId');
                    if (div) {
                        div.innerHTML = "";
                    }
                }
                
                viewer.on('pick', function (args) {
                    var id = args.id;
                    viewer.setCameraTarget(id);
                    pickedId = id;
                    document.getElementById('hiddenId').value = id;

                    //var cmb = document.getElementById('cmbHide');
                    //var option = cmb.value;
                    switch (option) {
                        case 'hideProduct':
                            viewer.setState(xState.HIDDEN, [args.id]);
                            if (args.id == highlightedId)
                            {
                                highlightedId = null;
                            }
                            break;
                        case 'hideType':
                            var type = viewer.getProductType(args.id);
                            viewer.setState(xState.HIDDEN, type);
                            if (type == viewer.getProductType(highlightedId))
                            {
                                highlightedId = null;
                            }
                            break;
                        case 'highlight':
                            //viewer.resetStates();
                            viewer.setState(xState.UNDEFINED, [highlightedId]);
                            viewer.setState(xState.HIGHLIGHTED, [args.id]);
                            var div = document.getElementById('productId');
                            if (div) {
                                div.innerHTML = "Selected Asset Id = " + id;
                            }
                            highlightedId = id;
                            break;
                        default:
                            break;
                    }

                    var time = (new Date()).getTime();
                    if (time - timer < 200)
                        viewer.zoomTo(id);
                    timer = time;

                });
            </script>
            <input name="hiddenId" type="hidden" id="hiddenId" />
        </div>
    </div>


    <script>

        function CreateCanvas() {
            var htmlContent = document.createElement('canvas');
            htmlContent.id = "viewer";
            htmlContent.width = "500";
            htmlContent.height = "300";
            document.getElementById("viewer").remove();
            var ParentElement = document.getElementById("content");
            ParentElement.insertBefore(htmlContent, ParentElement.firstChild);
            viewer = new xViewer('viewer');
            navCube = new xNavigationCube();
            navCube.ratio = .1;
            viewer.addPlugin(navCube);
            viewer.start();
            viewer.defineStyle(0, [255,0,0,255])
            viewer.defineStyle(1, [255,160,16,255])
            viewer.defineStyle(2, [255,224,32,255])
            viewer.defineStyle(3, [0,255,0,255])
        }

        var AgentItems = {
            @foreach(var Items in Model)
            {
                @Items.Key@:: [@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Items.Value.Severe)), @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Items.Value.High)), @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Items.Value.Medium)), @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Items.Value.Low))],
            }
        }

        var listOfSevere = [];
        var listOfHigh = [];
        var listOfMedium = [];
        var listOfLow = [];

        $.each(AgentItems, function(key, value) {
            listOfSevere = listOfSevere.concat(value[0]);
            listOfHigh = listOfHigh.concat(value[1]);
            listOfMedium = listOfMedium.concat(value[2]);
            listOfLow = listOfLow.concat(value[3]);
        })
        
        var listOfSevere2 = listOfSevere;
        var listOfHigh2 = listOfHigh;
        var listOfMedium2 = listOfMedium;
        var listOfLow2 = listOfLow;

        
        var animateSevereBool = true;
        function ToggleHighLightSevere() {                    
            animateSevereBool ? animateSevereBool = false : animateSevereBool = true;
        }
        
        var animateHighBool = true;
        function ToggleHighLightHigh() {
            animateHighBool ? animateHighBool = false : animateHighBool = true;
        }

        var animateMediumBool = true;
        function ToggleHighLightMedium() {
            animateMediumBool ? animateMediumBool = false : animateMediumBool = true;
        }

        var animateLowBool = true;
        function ToggleHighLightLow() {
            animateLowBool ? animateLowBool = false : animateLowBool = true;
        }
        
        var HighLightItemsBool = false;
        var animation;
        function ToggleHighLightItems() {
            if (HighLightItemsBool) {
                clearInterval(animation);
                viewer.resetStyles();
                HighLightItemsBool = false;
            }
            else {
                var animateBool = true;
                animation = setInterval(animateObjects, 500);
                function animateObjects() {
                    if (animateBool) {
                        if(animateSevereBool) {
                            viewer.setStyle(0, listOfSevere);
                        }
                        if(animateHighBool) {
                            viewer.setStyle(1, listOfHigh);
                        }
                        if (animateMediumBool) {
                            viewer.setStyle(2, listOfMedium);
                        }
                        if (animateLowBool) {
                            viewer.setStyle(3, listOfLow);
                        }
                        animateBool = false;
                    }
                    else {
                        viewer.resetStyles()
                        animateBool = true;
                    }
                    HighLightItemsBool = true;
                }
            }  
        }
        
        $(document).ready(function () {
            $('#ManagersTable').DataTable(
                {
                    "columnDefs": [
                    { 
                      "searchable": false, "targets": [2, 3],
                    }
                    ],
                    "autoWidth": false,
                    "columns" : [
                        { "width": "15%" },
                        { "width": "45%" },
                        { "width": "20%" },
                        { "width": "20%" },
                    ],
                    "oLanguage": {
                       "sSearch": "<english>Search :</english><arabic class='d-none'>بحث :</arabic>",
                       "sEmptyTable": "<english>No data available in table</english><arabic class='d-none'>لا توجد بيانات متوفرة في الجدول</arabic>",
                       "oPaginate": {
                            "sNext": "<english>Next</english><arabic class='d-none'>التالي</arabic>",
                            "sPrevious": "<english>Previous</english><arabic class='d-none'>السابق</arabic>"
                       },
                       "sInfo": "<english>Showing _START_ to _END_ of _TOTAL_ entries</english><arabic class='d-none'>عرض _START_ إلى _END_ من أصل _TOTAL_ بيانات</arabic>",
                       "sInfoEmpty": "<english>No entries to show</english><arabic class='d-none'>لا يوجد بيانات للعرض</arabic>",
                       "sInfoFiltered": "<english>(filtering from _MAX_ entries)</english><arabic class='d-none'>(مصفى من _MAX_ البيانات)</arabic>",
                       "sLengthMenu": "<english>Show</english><arabic class='d-none'>إظهار</arabic> _MENU_ <english>entries</english><arabic class='d-none'>بيانات</arabic>"
                    },
                    "drawCallback": function( settings ) {
                        if (localStorage.getItem('language') == "arabic")
                        {
                            var english = $('english');
                            var arabic = $('arabic');
                            $(english).each(function () {
                                $(this).addClass("d-none")
                            });
                            $(arabic).each(function () {
                                $(this).removeClass("d-none")
                            });
                        }
                    },
                }
            );
        } );
        
        $(document).ready(function () {
            $('#SupervisorsTable').DataTable(
                {
                    "columnDefs": [
                        {
                            "searchable": false, "targets": [2, 3],
                        }
                    ],
                    "autoWidth": false,
                    "columns": [
                        { "width": "15%" },
                        { "width": "45%" },
                        { "width": "20%" },
                        { "width": "20%" },
                    ],
                    "oLanguage": {
                       "sSearch": "<english>Search :</english><arabic class='d-none'>بحث :</arabic>",
                       "sEmptyTable": "<english>No data available in table</english><arabic class='d-none'>لا توجد بيانات متوفرة في الجدول</arabic>",
                       "oPaginate": {
                            "sNext": "<english>Next</english><arabic class='d-none'>التالي</arabic>",
                            "sPrevious": "<english>Previous</english><arabic class='d-none'>السابق</arabic>"
                       },
                       "sInfo": "<english>Showing _START_ to _END_ of _TOTAL_ entries</english><arabic class='d-none'>عرض _START_ إلى _END_ من أصل _TOTAL_ بيانات</arabic>",
                       "sInfoEmpty": "<english>No entries to show</english><arabic class='d-none'>لا يوجد بيانات للعرض</arabic>",
                       "sInfoFiltered": "<english>(filtering from _MAX_ entries)</english><arabic class='d-none'>(مصفى من _MAX_ البيانات)</arabic>",
                       "sLengthMenu": "<english>Show</english><arabic class='d-none'>إظهار</arabic> _MENU_ <english>entries</english><arabic class='d-none'>بيانات</arabic>"
                    },
                    "drawCallback": function( settings ) {
                        if (localStorage.getItem('language') == "arabic")
                        {
                            var english = $('english');
                            var arabic = $('arabic');
                            $(english).each(function () {
                                $(this).addClass("d-none")
                            });
                            $(arabic).each(function () {
                                $(this).removeClass("d-none")
                            });
                        }
                    },
                }
            );
        } );
        
        $(document).ready(function () {
            $('#InspectorsTable').DataTable(
                {
                    "columnDefs": [
                    { 
                      "searchable": false, "targets": [2, 3],
                    }
                    ],
                    "autoWidth": false,
                    "columns" : [
                        { "width": "15%" },
                        { "width": "45%" },
                        { "width": "20%" },
                        { "width": "20%" },
                    ],
                    "oLanguage": {
                       "sSearch": "<english>Search :</english><arabic class='d-none'>بحث :</arabic>",
                       "sEmptyTable": "<english>No data available in table</english><arabic class='d-none'>لا توجد بيانات متوفرة في الجدول</arabic>",
                       "oPaginate": {
                            "sNext": "<english>Next</english><arabic class='d-none'>التالي</arabic>",
                            "sPrevious": "<english>Previous</english><arabic class='d-none'>السابق</arabic>"
                       },
                       "sInfo": "<english>Showing _START_ to _END_ of _TOTAL_ entries</english><arabic class='d-none'>عرض _START_ إلى _END_ من أصل _TOTAL_ بيانات</arabic>",
                       "sInfoEmpty": "<english>No entries to show</english><arabic class='d-none'>لا يوجد بيانات للعرض</arabic>",
                       "sInfoFiltered": "<english>(filtering from _MAX_ entries)</english><arabic class='d-none'>(مصفى من _MAX_ البيانات)</arabic>",
                       "sLengthMenu": "<english>Show</english><arabic class='d-none'>إظهار</arabic> _MENU_ <english>entries</english><arabic class='d-none'>بيانات</arabic>"
                    },
                    "drawCallback": function( settings ) {
                        if (localStorage.getItem('language') == "arabic")
                        {
                            var english = $('english');
                            var arabic = $('arabic');
                            $(english).each(function () {
                                $(this).addClass("d-none")
                            });
                            $(arabic).each(function () {
                                $(this).removeClass("d-none")
                            });
                        }
                    },
                }
            );
        } );

        $(document).ready(function () {
            $('#AgentsTable').DataTable(
                {
                    "columnDefs": [
                        {
                            "searchable": false, "targets": [2, 3],
                        }
                    ],
                    "autoWidth": false,
                    "columns": [
                        { "width": "15%" },
                        { "width": "45%" },
                        { "width": "20%" },
                        { "width": "20%" },
                    ],
                    "oLanguage": {
                       "sSearch": "<english>Search :</english><arabic class='d-none'>بحث :</arabic>",
                       "sEmptyTable": "<english>No data available in table</english><arabic class='d-none'>لا توجد بيانات متوفرة في الجدول</arabic>",
                       "oPaginate": {
                            "sNext": "<english>Next</english><arabic class='d-none'>التالي</arabic>",
                            "sPrevious": "<english>Previous</english><arabic class='d-none'>السابق</arabic>"
                       },
                       "sInfo": "<english>Showing _START_ to _END_ of _TOTAL_ entries</english><arabic class='d-none'>عرض _START_ إلى _END_ من أصل _TOTAL_ بيانات</arabic>",
                       "sInfoEmpty": "<english>No entries to show</english><arabic class='d-none'>لا يوجد بيانات للعرض</arabic>",
                       "sInfoFiltered": "<english>(filtering from _MAX_ entries)</english><arabic class='d-none'>(مصفى من _MAX_ البيانات)</arabic>",
                       "sLengthMenu": "<english>Show</english><arabic class='d-none'>إظهار</arabic> _MENU_ <english>entries</english><arabic class='d-none'>بيانات</arabic>"
                    },
                    "drawCallback": function( settings ) {
                        if (localStorage.getItem('language') == "arabic")
                        {
                            var english = $('english');
                            var arabic = $('arabic');
                            $(english).each(function () {
                                $(this).addClass("d-none")
                            });
                            $(arabic).each(function () {
                                $(this).removeClass("d-none")
                            });
                        }
                    },
                }
            );
        } );        

        $(document).ready(function () {
            $('#ItemsTable').DataTable(
                {
                    "columnDefs": [
                            { "searchable": false, "targets": [4], },
                            { "targets": [0], "visible": false, }
                    ],
                    dom: '<"mb-2"B>lfrtip',
                    buttons : [
                        {
                            text: "<english>Show All</english><arabic class='d-none'>عرض الكل</arabic>",
                            action: function ( e, dt, node, config ) {
                                    ShowAllData();
                            },
                            className: 'btn btn-primary waves-effect waves-light mr-1'
                        },
                        {
      	                    extend: 'excelHtml5',
                            text: '<english>Save as excel sheet</english><arabic class="d-none">حفظ كملف اكسل</arabic>',
                            exportOptions: {
                                columns: [ 0, 1, 2, 3],
                                format: {
                                    header: function(text, index, node) {
                                        return localStorage.getItem('language') == "english" ? text.replace(/[\u0621-\u064A]/g, '').replace( /<.*?>/g, '') : text.replace(/[A-Za-z]/g, '').replace( /<.*?>/g, '');
                                    }
                                }
                            },
                            className: 'btn btn-primary waves-effect waves-light mr-1'
                        }
                    ],
                    "search": {regex: true},
                    "autoWidth": false,
                    "columns": [
                        { "width": "0%" },
                        { "width": "15%" },
                        { "width": "30%" },
                        { "width": "35%" },
                        { "width": "20%" },
                    ],
                    "oLanguage": {
                       "sSearch": "<english>Search :</english><arabic class='d-none'>بحث :</arabic>",
                       "sEmptyTable": "<english>No data available in table</english><arabic class='d-none'>لا توجد بيانات متوفرة في الجدول</arabic>",
                       "oPaginate": {
                            "sNext": "<english>Next</english><arabic class='d-none'>التالي</arabic>",
                            "sPrevious": "<english>Previous</english><arabic class='d-none'>السابق</arabic>"
                       },
                       "sInfo": "<english>Showing _START_ to _END_ of _TOTAL_ entries</english><arabic class='d-none'>عرض _START_ إلى _END_ من أصل _TOTAL_ بيانات</arabic>",
                       "sInfoEmpty": "<english>No entries to show</english><arabic class='d-none'>لا يوجد بيانات للعرض</arabic>",
                       "sInfoFiltered": "<english>(filtering from _MAX_ entries)</english><arabic class='d-none'>(مصفى من _MAX_ البيانات)</arabic>",
                       "sLengthMenu": "<english>Show</english><arabic class='d-none'>إظهار</arabic> _MENU_ <english>entries</english><arabic class='d-none'>بيانات</arabic>"
                    },
                    "drawCallback": function( settings ) {
                        if (localStorage.getItem('language') == "arabic")
                        {
                            var english = $('english');
                            var arabic = $('arabic');
                            $(english).each(function () {
                                $(this).addClass("d-none")
                            });
                            $(arabic).each(function () {
                                $(this).removeClass("d-none")
                            });
                        }
                    },
                    stateSave: true
                }    
            );
        } );

        var ItemsTableHeading = $("#BottomTableHeading")[0]

        function ShowAllData() {
            var itemsTable = $("#ItemsTable").DataTable()
            itemsTable.column(0).search("").draw();
            listOfSevere = listOfSevere2;
            listOfHigh = listOfHigh2;
            listOfMedium = listOfMedium2;
            listOfLow = listOfLow2;
            var Language = localStorage.getItem('language')
            if (Language == "english") {
                ItemsTableHeading.innerHTML = "<english>All Work Orders</english><arabic class='d-none'>كل المهام</arabic>"
            }
            else {
                ItemsTableHeading.innerHTML = "<english class='d-none'>All Work Orders</english><arabic>كل المهام</arabic>"
            }
        }

        var AgentsDic = {
            @foreach(var Agent in ViewBag.Agents)
            {
                @Agent.Id@::@Html.Raw(Json.Serialize(Agent.FirstName + " " + Agent.LastName)),
            }
        }

        function ChangeData(Id) {
            var itemsTable = $("#ItemsTable").DataTable()
            itemsTable.column(0).search(Id).draw();
            listOfSevere = AgentItems[Id][0];
            listOfHigh = AgentItems[Id][1];
            listOfMedium = AgentItems[Id][2];
            listOfLow = AgentItems[Id][3];
            var Language = localStorage.getItem('language')
            if (Language == "english") {
                ItemsTableHeading.innerHTML = "<english>Work Orders for Agent " + AgentsDic[Id] + "</english><arabic class='d-none'>مهام العامل " + AgentsDic[Id] + "</arabic>"
            }
            else {
                ItemsTableHeading.innerHTML = "<english class='d-none'>Work Orders for Agent " + AgentsDic[Id] + "</english><arabic>مهام العامل " + AgentsDic[Id] + "</arabic>"
            }
        }
        
        var InspectorAgentsDic = {
            @foreach(var inspector in ViewBag.InspectorAgentsDic)
            {
                @inspector.Key@::@Html.Raw(Json.Serialize(inspector.Value)),
            }
        }

        var InspectorsDic = {
            @foreach(var Inspector in ViewBag.Inspectors)
            {
                @Inspector.Id@::@Html.Raw(Json.Serialize(Inspector.FirstName + " " + Inspector.LastName)),
            }
        }
        
        function ChangeDataInspector(Id) {
            var agents = InspectorAgentsDic[Id]
            var Regex = "";
            listOfSevere = [];
            listOfHigh = [];
            listOfMedium = [];
            listOfLow = [];
            $(agents).each(function(index, value) {
                  Regex += value;
                  listOfSevere = listOfSevere.concat(AgentItems[value][0]);
                  listOfHigh = listOfHigh.concat(AgentItems[value][1]);
                  listOfMedium = listOfMedium.concat(AgentItems[value][2]);
                  listOfLow = listOfLow.concat(AgentItems[value][3]);
                  var isLastElement = index == agents.length -1;
                  if (isLastElement) {
                      return false;
                  }
                Regex += "|";
            });
            //itemsTable.column(0).search("24|25", true, false).draw();
            var itemsTable = $("#ItemsTable").DataTable()
            itemsTable.column(0).search(Regex, true, false).draw();
            var Language = localStorage.getItem('language')
            if (Language == "english") {
                ItemsTableHeading.innerHTML = "<english>Work Orders for Inspector " + InspectorsDic[Id] + "</english><arabic class='d-none'>مهام المفتش " + InspectorsDic[Id] + "</arabic>"
            }
            else {
                ItemsTableHeading.innerHTML = "<english class='d-none'>Work Orders for Inspector " + InspectorsDic[Id] + "</english><arabic>مهام المفتش " + InspectorsDic[Id] + "</arabic>"
            }
        }

        var SupervisorInspectorsDic = {
            @foreach(var supervisor in ViewBag.SupervisorInspectorsDic)
            {
                @supervisor.Key@::@Html.Raw(Json.Serialize(supervisor.Value)),
            }
        }

        var SupervisorsDic = {
            @foreach(var Supervisor in ViewBag.Supervisors)
            {
                @Supervisor.Id@::@Html.Raw(Json.Serialize(Supervisor.FirstName + " " + Supervisor.LastName)),
            }
        }

        function ChangeDataSupervisor(Id) {
            var inspectors = SupervisorInspectorsDic[Id]
            var agents = [];
            var Regex = "";
            listOfSevere = [];
            listOfHigh = [];
            listOfMedium = [];
            listOfLow = [];
            $(inspectors).each(function(index, value) {
                agents = agents.concat(InspectorAgentsDic[value]);
            });
            $(agents).each(function(index, value) {
                Regex += value;
                listOfSevere = listOfSevere.concat(AgentItems[value][0]);
                listOfHigh = listOfHigh.concat(AgentItems[value][1]);
                listOfMedium = listOfMedium.concat(AgentItems[value][2]);
                listOfLow = listOfLow.concat(AgentItems[value][3]);
                var isLastElement = index == agents.length -1;
                if (isLastElement) {
                    return false;
                }
                Regex += "|";
            });
            var itemsTable = $("#ItemsTable").DataTable()
            itemsTable.column(0).search(Regex, true, false).draw();
            var Language = localStorage.getItem('language')
            if (Language == "english") {
                ItemsTableHeading.innerHTML = "<english>Work Orders for Supervisor " + SupervisorsDic[Id] + "</english><arabic class='d-none'>مهام المشرف " + SupervisorsDic[Id] + "</arabic>"
            }
            else {
                ItemsTableHeading.innerHTML = "<english class='d-none'>Work Orders for Supervisor " + SupervisorsDic[Id] + "</english><arabic>مهام المشرف " + SupervisorsDic[Id] + "</arabic>"
            }
        }
        
        var ManagerSupervisorsDic = {
            @foreach(var manager in ViewBag.ManagerSupervisorsDic)
            {
                @manager.Key@::@Html.Raw(Json.Serialize(manager.Value)),
            }
        }

        var ManagersDic = {
            @foreach(var Manager in ViewBag.Managers)
            {
                @Manager.Id@::@Html.Raw(Json.Serialize(Manager.FirstName + " " + Manager.LastName)),
            }
        }
        
        function ChangeDataManager(Id) {
            var supervisors = ManagerSupervisorsDic[Id]
            var agents = [];
            var Regex = "";
            listOfSevere = [];
            listOfHigh = [];
            listOfMedium = [];
            listOfLow = [];            
            $(supervisors).each(function(index, value) {
                var inspectors = SupervisorInspectorsDic[value]
                $(inspectors).each(function(index, value) {
                    agents = agents.concat(InspectorAgentsDic[value]);
                });
            });
            $(agents).each(function(index, value) {
                Regex += value;
                listOfSevere = listOfSevere.concat(AgentItems[value][0]);
                listOfHigh = listOfHigh.concat(AgentItems[value][1]);
                listOfMedium = listOfMedium.concat(AgentItems[value][2]);
                listOfLow = listOfLow.concat(AgentItems[value][3]);
                var isLastElement = index == agents.length -1;
                if (isLastElement) {
                    return false;
                }
                Regex += "|";
            });
            var itemsTable = $("#ItemsTable").DataTable()
            itemsTable.column(0).search(Regex, true, false).draw();
            var Language = localStorage.getItem('language')
            if (Language == "english") {
                ItemsTableHeading.innerHTML = "<english>Work Orders for Manager " + ManagersDic[Id] + "</english><arabic class='d-none'>مهام المدير " + ManagersDic[Id] + "</arabic>"
            }
            else {
                ItemsTableHeading.innerHTML = "<english class='d-none'>Work Orders for Manager " + ManagersDic[Id] + "</english><arabic>مهام المدير " + ManagersDic[Id] + "</arabic>"
            }
        }
    </script>

</body>