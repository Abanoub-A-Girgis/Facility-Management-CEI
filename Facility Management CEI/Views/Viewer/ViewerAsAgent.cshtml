
@{
    ViewBag.Title = "Viewer";
}
@using System.Configuration
@using API.Models
@model Facility_Management_CEI.Controllers.ViewerParameter
<h1 class="text-center text-uppercase font-weight-bold mb-5">
    <english> Task Viewer Dashboard</english>
    <arabic class="d-none">لوحة متابعة المهام</arabic>
</h1>

<head>
    <title>
        <english> View as Agent</english>
        <arabic class="d-none">عرض المبنى كعامل</arabic>
    </title>
    <script src="../Scripts/XBIM/xbim-viewer.debug.bundle.js"></script>
    <script src="../Scripts/XBIM/NavigationCube/xbim-navigation-cube-shaders.debug.js"></script>
    <script src="../Scripts/XBIM/NavigationCube/xbim-navigation-cube.debug.js"></script>
    <script src="../Scripts/XBIM/NavigationCube/xbim-navigation-cube-textures.debug.js"></script>
    <script src="../Scripts/XBIM/NavigationHome/xbim-navigation-home-textures.debug.js"></script>
    <script src="../Scripts/XBIM/NavigationHome/xbim-navigation-home.debug.js"></script>
    
    <script src="~/assets/libs/datatables.net/js/jquery.dataTables.min.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/1.10.12/js/jquery.dataTables.min.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/buttons/1.2.2/js/dataTables.buttons.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jszip/2.5.0/jszip.min.js"></script>
    <script type="text/javascript" src="https://cdn.rawgit.com/bpampuch/pdfmake/0.1.18/build/pdfmake.min.js"></script>
    <script type="text/javascript" src="https://cdn.rawgit.com/bpampuch/pdfmake/0.1.18/build/vfs_fonts.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/buttons/1.2.2/js/buttons.html5.min.js"></script>
    
    <link href="~/assets/libs/datatables.net/css/jquery.dataTables.css" rel="stylesheet" type="text/css" >
    
</head>
<body>
    <div class="row">
        <div class="col-5">
            <h3 class="text-center font-weight-bold" id="BottomTableHeading">
                    <english>All Tasks</english>
                    <arabic class="d-none">عرض كل المهام</arabic>
            </h3>
            <div class="shadow-sm p-3 mb-4 bg-white rounded tab-pane" id="tab-table2">
                <table id="ItemsTable" class="w-100 table table-striped table-hover">
                    <thead>
                        <tr class="sticky-top">
                            <th>
                                <english>Task ID</english>
                                <arabic class="d-none">كود المهمة</arabic>
                            </th>
                            <th>
                                <english>Asset Name</english>
                                <arabic class="d-none">اسم العنصر</arabic>
                            </th>
                            <th>
                                <english> Details</english>
                                <arabic class="d-none">التفاصيل</arabic>
                            </th>
                            <th>
                                <english> Zoom To</english>
                                <arabic class="d-none">تكبير/تصغير</arabic>
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var task in ViewBag.Tasks)
                        {
                            <tr>
                                <th>@task.Id</th>
                                <td>@if(task.Incident.Asset != null)
                                    {
                                        @task.Incident.Asset.Name;
                                    }
                                    else
                                    {
                                        @Html.Raw("NO ASSET");
                                    }
                                </td>
                                @*<td><button class="btn btn-info waves-effect waves-light" onclick="">Details</button></td>*@
                                <td><a scope="col" asp-controller="TaskPages" asp-action="Details" asp-route-id="@task.Id" class="btn btn-info waves-effect waves-light" >
                                    <english>Details</english>
                                    <arabic class="d-none">التفاصيل</arabic></a>
                                </td>
                                <td><button class="btn btn-success waves-effect waves-light" onclick="viewer.zoomTo(@task.Incident.AssetId)" @if(task.Incident.Asset == null){@Html.Raw("disabled")}>
                                        <english>Zoom To</english>
                                        <arabic class="d-none">تكبير/تصغير</arabic> 
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
@*            <button onclick="ChangeData1()">Change Data 1</button>
            <button onclick="ChangeData2()">Change Data 2</button>*@
        </div>
        <div class="col-7">
            <canvas id="viewer" height="650" style="width: 100%;
                                       object-fit: contain;"></canvas>
            <div class="shadow-lg p-3 mb-5 bg-white rounded" style="width: 150px; position: absolute;
                                                                    top: 8px;
                                                                    left: 20px;
                                                                    z-index:5"">
                <div class="font-weight-bold mb-2 text-center">Toggle Highlights</div>
                @*<button class="btn btn-primary" onclick="ToggleHighLightItems()">Toggle Highlight Items</button>
                <button class="btn btn-primary" onclick="ToggleHighLightSevere()">Toggle Highlight Severe</button>
                <button class="btn btn-primary" onclick="ToggleHighLightHigh()">Toggle Highlight High</button>
                <button class="btn btn-primary" onclick="ToggleHighLightMedium()">Toggle Highlight Medium</button>
                <button class="btn btn-primary" onclick="ToggleHighLightLow()">Toggle Highlight Low</button>*@
                <div class="custom-control custom-switch mb-1">
                    <input type="checkbox" class="custom-control-input" id="Switch1" onchange="ToggleHighLightItems()" autocomplete="off">
                    <label class="custom-control-label" for="Switch1">Items</label>
                </div>
                <div class="custom-control custom-switch mb-1">
                    <input type="checkbox" class="custom-control-input custom-control-input-light" id="Switch2" onchange="ToggleHighLightSevere()" checked autocomplete="off">
                    <label class="custom-control-label custom-control-label-light" for="Switch2">Severe</label>
                </div>
                <div class="custom-control custom-switch mb-1">
                    <input type="checkbox" class="custom-control-input custom-control-input-light" id="Switch3" onchange="ToggleHighLightHigh()" checked autocomplete="off">
                    <label class="custom-control-label custom-control-label-light" for="Switch3">High</label>
                </div>
                <div class="custom-control custom-switch mb-1">
                    <input type="checkbox" class="custom-control-input custom-control-input-light" id="Switch4" onchange="ToggleHighLightMedium()" checked autocomplete="off">
                    <label class="custom-control-label custom-control-label-light" for="Switch4">Medium</label>
                </div>
                <div class="custom-control custom-switch mb-1">
                    <input type="checkbox" class="custom-control-input custom-control-input-light" id="Switch5" onchange="ToggleHighLightLow()" checked autocomplete="off">
                    <label class="custom-control-label custom-control-label-light" for="Switch5">Low</label>
                </div>

            </div>
            <div style="position: absolute;
                        top: 8px;
                        right: 16px;
                        z-index:5" id="overlayDiv"></div>
            <script type="text/javascript">
                var viewer = new xViewer('viewer');
                //viewer.load('../data/SampleHouse.wexbim');
                viewer.load('@System.Configuration.ConfigurationManager.AppSettings["wexBIMFullPath"]');
                var navCube = new xNavigationCube();
                navCube.ratio = .1;
                viewer.addPlugin(navCube);
                viewer.start();
                viewer.defineStyle(0, [255,0,0,255])
                viewer.defineStyle(1, [255,160,16,255])
                viewer.defineStyle(2, [255,224,32,255])
                viewer.defineStyle(3, [0,255,0,255])
            </script>

            @*<script> 
                    viewer.on('pick', function (args) {
                        var id = args.id;
                        viewer.setCameraTarget(id);
                        pickedId = id;
                    });
            </script>*@

            <script>
                    viewer.on('fps', function (fps) {
                        var overlayDiv = document.getElementById('overlayDiv');
                        if (overlayDiv) {
                            overlayDiv.innerHTML = "FPS: " + fps;
                        }
                    });
            </script>

            <div>
                <div class="text-center font-weight-bold m-2" id="productId"></div>
            </div>

            <script>
                // Arrays to hold the item id's depending on their priority
                var listOfSevere = [];
                var listOfHigh = [];
                var listOfMedium = [];
                var listOfLow = [];
        
                @foreach (var i in Model.Severe)
                    {
                        @:listOfSevere.push(@i);
                    }
                @foreach (var i in Model.High)
                    {
                        @:listOfHigh.push(@i);
                    }
                 @foreach (var i in Model.Medium)
                    {
                        @:listOfMedium.push(@i);
                    }
                @foreach (var i in Model.Low)
                    {
                        @:listOfLow.push(@i);
                    }
            
                //var animateBool = true;
                //setInterval(animateObjects, 1000);
                //function animateObjects() {
                //    if (animateBool) {
                //        viewer.setStyle(0, listOfSevere);
                //        viewer.setStyle(1, listOfHigh);
                //        viewer.setStyle(2, listOfMedium);
                //        viewer.setStyle(3, listOfLow);
                //        animateBool = false;
                //    }
                //    else {
                //        viewer.resetStyles()
                //        animateBool = true;
                //    }
                //}
            </script>

            <div class="text-center">
    @*            <select id="cmbHide">
                    <option value="noAction">No action</option>
                    <option value="hideProduct">Hide product</option>
                    <option value="hideType">Hide type</option>
                    <option value="highlight">Highlight</option>
                </select>*@
                <button class="btn btn-primary waves-effect waves-light" onclick="HideProduct()">
                    <english>Hide Product</english>
                    <arabic class="d-none">إخفاء عنصر</arabic>
                </button>
                <button class="btn btn-primary waves-effect waves-light" onclick="HideType()">
                    <english>Hide Type</english>
                    <arabic class="d-none">إخفاء الحالة</arabic>
                </button>
                <button class="btn btn-primary waves-effect waves-light" onclick="Highlight()">
                    <english>Select Product</english>
                    <arabic class="d-none">اختر  عنصر</arabic>
                </button>
                <button class="btn btn-primary waves-effect waves-light" onclick="viewer.zoomTo()">
                    <english>Reset Zoom</english>
                    <arabic class="d-none">ارجاع التكبير</arabic>
                </button>
                <button class="btn btn-primary waves-effect waves-light" onclick="ResetAll()">
                    <english>Reset all</english>
                    <arabic class="d-none">ارجاع الكل</arabic>
                </button>
                <script type="text/javascript">

                    var timer = 0;
                    var highlightedId;
                    var option;
                
                    function HideProduct() {
                        option = "hideProduct";
                    }
                
                    function HideType() {
                        option = "hideType";
                    }

                    function Highlight() {
                        option = "highlight";
                    }

                    function ResetAll() {
                        if (viewer) {
                            viewer.resetStates();
                        }
                        var div = document.getElementById('productId');
                        if (div) {
                            div.innerHTML = "";
                        }
                    }
                
                    viewer.on('pick', function (args) {
                        var id = args.id;
                        viewer.setCameraTarget(id);
                        pickedId = id;
                        document.getElementById('hiddenId').value = id;

                        //var cmb = document.getElementById('cmbHide');
                        //var option = cmb.value;
                        switch (option) {
                            case 'hideProduct':
                                viewer.setState(xState.HIDDEN, [args.id]);
                                if (args.id == highlightedId)
                                {
                                    highlightedId = null;
                                }
                                break;
                            case 'hideType':
                                var type = viewer.getProductType(args.id);
                                viewer.setState(xState.HIDDEN, type);
                                if (type == viewer.getProductType(highlightedId))
                                {
                                    highlightedId = null;
                                }
                                break;
                            case 'highlight':
                                //viewer.resetStates();
                                viewer.setState(xState.UNDEFINED, [highlightedId]);
                                viewer.setState(xState.HIGHLIGHTED, [args.id]);
                                var div = document.getElementById('productId');
                                if (div) {
                                    div.innerHTML = "Selected Asset Id = " + id;
                                }
                                highlightedId = id;
                                break;
                            default:
                                break;
                        }

                        var time = (new Date()).getTime();
                        if (time - timer < 200)
                            viewer.zoomTo(id);
                        timer = time;

                    });
                </script>
                <input name="hiddenId" type="hidden" id="hiddenId" />
            </div>
        </div>
    </div>


    <script>

        function CreateCanvas() {
            var htmlContent = document.createElement('canvas');
            htmlContent.id = "viewer";
            htmlContent.width = "500";
            htmlContent.height = "300";
            document.getElementById("viewer").remove();
            var ParentElement = document.getElementById("content");
            ParentElement.insertBefore(htmlContent, ParentElement.firstChild);
            viewer = new xViewer('viewer');
            navCube = new xNavigationCube();
            navCube.ratio = .1;
            viewer.addPlugin(navCube);
            viewer.start();
            viewer.defineStyle(0, [255,0,0,255])
            viewer.defineStyle(1, [255,160,16,255])
            viewer.defineStyle(2, [255,224,32,255])
            viewer.defineStyle(3, [0,255,0,255])
        }

        var animateSevereBool = true;
        function ToggleHighLightSevere() {                    
            animateSevereBool ? animateSevereBool = false : animateSevereBool = true;
        }
        
        var animateHighBool = true;
        function ToggleHighLightHigh() {
            animateHighBool ? animateHighBool = false : animateHighBool = true;
        }

        var animateMediumBool = true;
        function ToggleHighLightMedium() {
            animateMediumBool ? animateMediumBool = false : animateMediumBool = true;
        }

        var animateLowBool = true;
        function ToggleHighLightLow() {
            animateLowBool ? animateLowBool = false : animateLowBool = true;
        }
        
        var HighLightItemsBool = false;
        var animation;
        function ToggleHighLightItems() {
            if (HighLightItemsBool) {
                clearInterval(animation);
                viewer.resetStyles();
                HighLightItemsBool = false;
            }
            else {
                var animateBool = true;
                animation = setInterval(animateObjects, 500);
                function animateObjects() {
                    if (animateBool) {
                        if(animateSevereBool) {
                            viewer.setStyle(0, listOfSevere);
                        }
                        if(animateHighBool) {
                            viewer.setStyle(1, listOfHigh);
                        }
                        if (animateMediumBool) {
                            viewer.setStyle(2, listOfMedium);
                        }
                        if (animateLowBool) {
                            viewer.setStyle(3, listOfLow);
                        }
                        animateBool = false;
                    }
                    else {
                        viewer.resetStyles()
                        animateBool = true;
                    }
                    HighLightItemsBool = true;
                }
            }  
        }
        
        $(document).ready(function () {
            $('#ItemsTable').DataTable(
                {
                    "columnDefs": [
                        { "searchable": false, "targets": [2,3] }
                    ],
                    dom: 'Blfrtip',
                    buttons : [
                        {
      	                    extend: 'excelHtml5',
                            text: 'Save as excel sheet',
                            exportOptions: {
                                columns: [ 0, 1]
                            },
                            className: 'btn btn-primary waves-effect waves-light mr-1 mb-1'
                        }
                    ]
                }    
            );
        } );
        
        //var test1 = @Html.Raw(ViewBag.test1);
        //var test2 = @Html.Raw(ViewBag.test2);
        //function ChangeData1() {
        //    testTable = $('#AgentTable').DataTable()
        //    $.each(test1, function() {
        //        testTable.rows.add([{0: this.Id,1: this.Name, 2: this.Name, 3: this.Name}])
        //    });
        //    testTable.columns.adjust().draw()
        //}
        
        //function ChangeData2() {
        //    testTable = $('#AgentTable').DataTable()
        //    $.each(test2, function() {
        //        testTable.rows.add([{0: this.Id,1: this.Name, 2: this.Name, 3: this.Name}])
        //    });
        //    testTable.columns.adjust().draw()
        //}
    </script>

</body>