@using Facility_Management_CEI.Controllers
@using API.Enums
@model API.Models.Task

@{
    ViewData["Title"] = "Details";
    //var tasks = (List<API.Models.Task>)ViewBag.ListOfTasks;
}
<head>
    <title><english>Work Order Details</english><arabic class="d-none">تفاصيف المهمة</arabic></title>

    @await Html.PartialAsync("~/Views/Viewer/ViewerScriptsPartial.cshtml")

</head>

<h1><english>Work Order Details</english><arabic class="d-none">تفاصيف المهمة</arabic></h1>

<div class="position-relative">
    <div class="shadow-lg py-3 mb-5 bg-white rounded row my-auto" style="position: absolute;
                                            height: 650px;
                                            left: 8px;
                                            z-index:6;" id="ToggleLeftSliderContainer">
        <div class="font-weight-bold mb-2 col-sm-1 my-auto" style="max-width: 1px"><div class="vertical-text"><english>Details</english><arabic class="d-none">المعلومات</arabic></div></div>
        <div id="ToggleLeftSlider" class="col-auto my-auto">
            <table class="table">
                <tr>
                    <th><english>ID</english><arabic class="d-none">الكود</arabic></th>
                    <td>@Html.DisplayFor(model => model.Id)</td>
                </tr>
                <tr>
                    <th><english>Description</english><arabic class="d-none">التوصيف</arabic></th>
                    <td>@Html.DisplayFor(model => model.Description)</td>
                </tr>
                <tr>
                    <th><english>Status</english><arabic class="d-none">الحالة</arabic></th>
                    <td>@Html.DisplayFor(model => model.Status)</td>
                </tr>
                <tr>
                    <th><english>Type</english><arabic class="d-none">النوع</arabic></th>
                    <td>@Html.DisplayFor(model => model.Type)</td>
                </tr>
                <tr>
                    <th><english>Priority</english><arabic class="d-none">الأهمية</arabic></th>
                    <td>@Html.DisplayFor(model => model.Priority)</td>
                </tr>
                <tr>
                    <th><english>Created By</english><arabic class="d-none">أنشئت من قبل</arabic></th>
                    <td>@Html.DisplayFor(model => model.CreatedBy.FirstName) @Html.DisplayFor(model => model.CreatedBy.LastName)</td>
                </tr>
                <tr>
                    <th><english>Incident</english><arabic class="d-none">الحادثة</arabic></th>
                    <td>@Html.DisplayFor(model => model.IncidentId)</td>
                </tr>
                <tr>
                    <th><english>Assigned To</english><arabic class="d-none">عينت إلى</arabic></th>
                    <td>@Html.DisplayFor(model => model.AssignedTo.FirstName) @Html.DisplayFor(model => model.AssignedTo.LastName)</td>
                </tr>
                <tr>
                    <th><english>Assigned By</english><arabic class="d-none">عينت من قبل</arabic></th>
                    <td>@Html.DisplayFor(model => model.AssignedBy.FirstName) @Html.DisplayFor(model => model.AssignedBy.LastName)</td>
                </tr>
                <tr>
                    <th><english>Cost</english><arabic class="d-none">التكلفة</arabic></th>
                    <td>@Html.DisplayFor(model => model.Cost)</td>
                </tr>
                <tr>
                    <th><english>Fixing Time</english><arabic class="d-none">تاريخ الإصلاح</arabic></th>
                    <td>@Html.DisplayFor(model => model.FixingTime)</td>
                </tr>
                <tr>
                    <th><english>Comment</english><arabic class="d-none">الملاحظات</arabic></th>
                    <td>@Html.DisplayFor(model => model.Comment)</td>
                </tr>
                               
            </table>
        </div>
        <div class="col-sm-1 SliderDiv" id="ToggleLeftSliderDivArrow" style="max-width: 1px">
            <i class="fas fa-angle-double-down vertical-text h-100 d-flex justify-content-center align-items-center" id="ToggleLeftSliderArrow"></i>
        </div>
    </div>

    <canvas id="viewer" height="650" style="width: 100%;
                            object-fit: contain;"></canvas>
    <div class="shadow-lg p-3 mb-5 bg-white rounded" style="width: 150px; position: absolute; top: 8px;left: 4%;z-index:5"">
        <div class="font-weight-bold mb-2 text-center"><english>Toggle Highlights</english><arabic class="d-none">تبديل الإضاءات</arabic></div>
        @*<button class="btn btn-primary" onclick="ToggleHighLightItems()">Toggle Highlight Items</button>
        <button class="btn btn-primary" onclick="ToggleHighLightSevere()">Toggle Highlight Severe</button>
        <button class="btn btn-primary" onclick="ToggleHighLightHigh()">Toggle Highlight High</button>
        <button class="btn btn-primary" onclick="ToggleHighLightMedium()">Toggle Highlight Medium</button>
        <button class="btn btn-primary" onclick="ToggleHighLightLow()">Toggle Highlight Low</button>*@
        <div class="custom-control custom-switch mb-1">
            <input type="checkbox" class="custom-control-input" id="Switch1" onchange="ToggleHighLightItems()" autocomplete="off">
            <label class="custom-control-label" for="Switch1"><english>Items</english><arabic class="d-none">العناصر</arabic></label>
        </div>
        @*<div class="custom-control custom-switch mb-1">
            <input type="checkbox" class="custom-control-input custom-control-input-light" id="Switch2" onchange="ToggleHighLightSevere()" checked>
            <label class="custom-control-label custom-control-label-light" for="Switch2">Severe</label>
        </div>
        <div class="custom-control custom-switch mb-1">
            <input type="checkbox" class="custom-control-input custom-control-input-light" id="Switch3" onchange="ToggleHighLightHigh()" checked>
            <label class="custom-control-label custom-control-label-light" for="Switch3">High</label>
        </div>
        <div class="custom-control custom-switch mb-1">
            <input type="checkbox" class="custom-control-input custom-control-input-light" id="Switch4" onchange="ToggleHighLightMedium()" checked>
            <label class="custom-control-label custom-control-label-light" for="Switch4">Medium</label>
        </div>
        <div class="custom-control custom-switch mb-1">
            <input type="checkbox" class="custom-control-input custom-control-input-light" id="Switch5" onchange="ToggleHighLightLow()" checked>
            <label class="custom-control-label custom-control-label-light" for="Switch5">Low</label>
        </div>*@
    </div>

    @await Html.PartialAsync("~/Views/Viewer/ViewerToggleFloorsPartial.cshtml")

    <div style="position: absolute;
                top: 8px;
                right: 16px;
                z-index:5" id="overlayDiv"></div>
    <script type="text/javascript">
        var viewer = new xViewer('viewer');
        //viewer.load('/data/SampleHouse.wexbim');
        //viewer.load('@System.Configuration.ConfigurationManager.AppSettings["wexBIMFullPath"]');
        var navCube = new xNavigationCube();
        navCube.ratio = .1;
        viewer.addPlugin(navCube);
        viewer.start();
        viewer.defineStyle(0, [255,0,0,255])
        viewer.defineStyle(1, [255,160,16,255])
        viewer.defineStyle(2, [255,224,32,255])
        viewer.defineStyle(3, [0,255,0,255])
    </script>

    <script>
            viewer.on('fps', function (fps) {
                var overlayDiv = document.getElementById('overlayDiv');
                if (overlayDiv) {
                    overlayDiv.innerHTML = "FPS: " + fps;
                }
            });
    </script>

    <div>
        <div class="text-center font-weight-bold m-2" id="productId"></div>
    </div>

    <div class="text-center">
@*            <select id="cmbHide">
            <option value="noAction">No action</option>
            <option value="hideProduct">Hide product</option>
            <option value="hideType">Hide type</option>
            <option value="highlight">Highlight</option>
        </select>*@
        <button class="btn btn-primary waves-effect waves-light" onclick="viewer.zoomTo(@if(Model.Incident.Asset == null){@Model.Incident.SpaceId} else {@Model.Incident.AssetId})"><english>Zoom to Item</english><arabic class="d-none">عرض العنصر</arabic></button>
        <button class="btn btn-primary waves-effect waves-light" onclick="HideProduct()"><english>Hide Product</english><arabic class="d-none">إخفاء العنصر</arabic></button>
        <button class="btn btn-primary waves-effect waves-light" onclick="HideType()"><english>Hide Type</english><arabic class="d-none">إخفاء النوع</arabic></button>
        <button class="btn btn-primary waves-effect waves-light" onclick="Highlight()"><english>Select Product</english><arabic class="d-none">إختيار العنصر</arabic></button>
        <button class="btn btn-primary waves-effect waves-light" onclick="ResetAll()"><english>Reset All</english><arabic class="d-none">إعادة الضبط</arabic></button>
        <script type="text/javascript">

            var timer = 0;
            var highlightedId;
            var option;
                
            function HideProduct() {
                option = "hideProduct";
            }
                
            function HideType() {
                option = "hideType";
            }

            function Highlight() {
                option = "highlight";
            }

            function ResetAll() {
                if (viewer) {
                    viewer.resetStates();
                }
                var div = document.getElementById('productId');
                if (div) {
                    div.innerHTML = "";
                }
            }
                
            viewer.on('pick', function (args) {
                var id = args.id;
                viewer.setCameraTarget(id);
                pickedId = id;
                document.getElementById('hiddenId').value = id;

                //var cmb = document.getElementById('cmbHide');
                //var option = cmb.value;
                switch (option) {
                    case 'hideProduct':
                        viewer.setState(xState.HIDDEN, [args.id]);
                        break;
                    case 'hideType':
                        var type = viewer.getProductType(args.id);
                        viewer.setState(xState.HIDDEN, type);
                        break;
                    case 'highlight':
                        //viewer.resetStates();
                        viewer.setState(xState.UNDEFINED, [highlightedId]);
                        viewer.setState(xState.HIGHLIGHTED, [args.id]);
                        var div = document.getElementById('productId');
                        if (div) {
                            div.innerHTML = "Selected Asset Id = " + id;
                        }
                        highlightedId = id;
                        break;
                    default:
                        break;
                }

                var time = (new Date()).getTime();
                if (time - timer < 200)
                    viewer.zoomTo(id);
                timer = time;

                });
            </script>
            <input name="hiddenId" type="hidden" id="hiddenId" />
        </div>
    <div>
</div>
        
</div>
@if (ViewContext.HttpContext.User.IsInAnyRoles("Supervisor", "Manager", "SystemAdmin", "Inspector"))
{
            
    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary"><english>Edit</english><arabic class="d-none">تعديل</arabic></a> 
}
<a asp-action="TaskList" class="btn btn-danger"><english>Back to List</english><arabic class="d-none">العودة إلى القائمة</arabic></a>


<script>

    function CreateCanvas() {
        var htmlContent = document.createElement('canvas');
        htmlContent.id = "viewer";
        htmlContent.width = "500";
        htmlContent.height = "300";
        document.getElementById("viewer").remove();
        var ParentElement = document.getElementById("content");
        ParentElement.insertBefore(htmlContent, ParentElement.firstChild);
        viewer = new xViewer('viewer');
        navCube = new xNavigationCube();
        navCube.ratio = .1;
        viewer.addPlugin(navCube);
        viewer.start();
        viewer.defineStyle(0, [255,0,0,255])
        viewer.defineStyle(1, [255,160,16,255])
        viewer.defineStyle(2, [255,224,32,255])
        viewer.defineStyle(3, [0,255,0,255])
    }

    var HighLightItemsBool = false;
    var animation;
    function ToggleHighLightItems() {
        if (HighLightItemsBool) {
            clearInterval(animation);
            viewer.resetStyles();
            HighLightItemsBool = false;
        }
        else {
            var animateBool = true;
            animation = setInterval(animateObjects, 500);
            function animateObjects() {
                if (animateBool) {
                    if("@Model.Priority" == "@Priority.Severe") {
                        viewer.setStyle(0, [@Model.Incident.AssetId]);
                    }
                    if("@Model.Priority" == "@Priority.High") {
                        viewer.setStyle(1, [@Model.Incident.AssetId]);
                    }
                    if ("@Model.Priority" == "@Priority.Medium") {
                        viewer.setStyle(2, [@Model.Incident.AssetId]);
                    }
                    if ("@Model.Priority" == "@Priority.Low") {
                        viewer.setStyle(3, [@Model.Incident.AssetId]);
                    }
                    animateBool = false;
                }
                else {
                    viewer.resetStyles()
                    animateBool = true;
                }
                HighLightItemsBool = true;
            }
        }  
    }
        
</Script>
                 
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}    
@*
 <form asp-controller="Account" asp-action="Login" method="post">
 <div asp-validation-summary="ModelOnly" class="text-danger"></div>*@ @*we add this line after the form tag*@ 

@* <span asp-validation-for="Comment" class="text-danger"></span>*@ @*we add this line after the input tag*@ 
@*<english>Welcome Back !</english><arabic class="d-none">مرحبا !</arabic>*@
@*<english></english><arabic class="d-none"></arabic>*@